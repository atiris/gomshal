{
  "name": "gomshal",
  "version": "1.5.0",
  "author": {
    "name": "Jozef Pažin"
  },
  "description": "Extracts Shared locations from Google Maps 🌍🔎👨‍👩‍👧‍👦 to JSON for Node.js. There is not an official api for Shared locations by Google, so it requires full username and password for Google account.",
  "homepage": "https://github.com/atiris/gomshal",
  "bugs": {
    "url": "https://github.com/atiris/gomshal/issues"
  },
  "publishConfig": {
    "access": "public"
  },
  "private": false,
  "type": "module",
  "main": "./build/lib/cjs/index.js",
  "module": "./build/lib/esm/index.js",
  "typings": "./build/lib/esm/index.d.ts",
  "files": [
    "build/lib/**/*"
  ],
  "exports": {
    "import": "./build/lib/esm/index.js",
    "default": "./build/lib/cjs/index.js"
  },
  "repository": "https://github.com/atiris/gomshal",
  "license": "MIT",
  "keywords": [
    "NodeJs",
    "typescript",
    "javascript",
    "Google Maps",
    "Shared locations"
  ],
  "scripts": {
    "help": "npm run && npm ls --depth 0",
    "commit:before": "run-s lint",
    "pretest": "echo \"WARNING: test not working yet\"",
    "test": "run-s test:*",
    "test:lint": "run-s lint",
    "test:unit": "echo \"WARNING: mocha not working because for using esm in node we need full file names in import, like import { Gomshal } from './gomshal.js'; but mocha can not find modules if this import contains full file name including extension. Original command: mocha -r ts-node/register ./src/**/*.spec.ts\"",
    "lint": "eslint .",
    "build": "run-s clean && run-p build:* && run-s copy",
    "build:lib": "run-p buildlib:*",
    "buildlib:cjs": "tsc -p tsconfig.cjs.json && copyfiles ./src/cjs/package.json ./build/lib/cjs --flat",
    "buildlib:esm": "tsc -p tsconfig.esm.json",
    "build:demo": "tsc -p tsconfig.demo.json",
    "copy": "run-s copy:*",
    "copy:demo": "copyfiles ./src/app/package.json ./build/demo/app --flat && copyfiles ./src/app/*.html ./build/demo/app --flat && copyfiles ./src/app/*.css ./build/demo/app --flat && copyfiles ./src/cjs/package.json ./build/demo/lib --flat",
    "fix": "run-s fix:*",
    "fix:lint": "eslint . --quiet --fix",
    "watch": "run-s clean build:main && run-p \"build:main -- -w\" \"test:unit -- --watch\"",
    "precov": "echo \"WARNING: cov not working yet\"",
    "cov": "echo \"Original command: run-s build test:unit cov:html && open-cli coverage/index.html\"",
    "cov:html": "nyc report --reporter=html",
    "cov:send": "nyc report --reporter=lcov && codecov",
    "cov:check": "nyc report && nyc check-coverage --lines 100 --functions 100 --branches 100",
    "coverage": "nyc -r lcov -e .ts -x \"*.spec.ts\" npm run test:unit",
    "coverage:mocha": "nyc --reporter=text mocha -r ts-node/register ./src/**/*.spec.ts",
    "demo": "run-s demo:prepare demo:run",
    "demo:prepare": "run-p build:demo copy:demo",
    "demo:run": "electron ./build/demo/app",
    "predoc": "echo \"WARNING: doc not working yet\"",
    "doc": "echo \"Original command: run-s doc:html && open-cli build/docs/index.html\"",
    "doc:html": "typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --out build/docs",
    "doc:json": "typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --json build/docs/typedoc.json",
    "doc:publish": "gh-pages -m \"[ci skip] Updates\" -d build/docs",
    "version": "standard-version",
    "reset": "git clean -dfx && git reset --hard && npm i",
    "clean": "trash build test",
    "prepare-release": "run-s reset test cov:check doc:html version doc:publish"
  },
  "engines": {
    "node": ">=10.0"
  },
  "dependencies": {
    "playwright-firefox": "^1.5.2"
  },
  "devDependencies": {
    "@bitjson/typedoc": "^0.15.0-0",
    "@types/chai": "^4.2.12",
    "@types/mocha": "^8.0.3",
    "@types/node": "^14.6.0",
    "@typescript-eslint/eslint-plugin": "^3.10.1",
    "@typescript-eslint/parser": "^3.10.1",
    "copyfiles": "^2.3.0",
    "cz-conventional-changelog": "^3.2.1",
    "electron": "^10.1.5",
    "eslint": "^7.7.0",
    "eslint-config-standard": "^14.1.1",
    "eslint-plugin-ava": "^11.0.0",
    "eslint-plugin-import": "^2.22.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-standard": "^4.0.1",
    "gh-pages": "^3.1.0",
    "husky": "^4.2.5",
    "chai": "^4.2.0",
    "json-schema": "^0.2.5",
    "mocha": "^8.1.2",
    "npm-run-all": "^4.1.5",
    "nyc": "^15.1.0",
    "open-cli": "^6.0.1",
    "standard-version": "^9.0.0",
    "trash-cli": "^3.1.0",
    "ts-node": "^9.0.0",
    "typescript": "^4.0.5"
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run commit:before"
    }
  },
  "standard-version": {
    "skip": {
      "commit": true
    }
  },
  "nyc": {
    "extends": "@istanbuljs/nyc-config-typescript",
    "exclude": [
      "**/*.spec.js"
    ]
  }
}
